#!/usr/bin/env ruby

# TODO:
# - combine this with a shell script that 'cd's into the directory
# - list the directory after the clone

if ARGV.empty?
  puts "Usage:"
  puts "  gc [options] <git repo url>"
  puts
  puts "Options:"
  puts "  -s   Shallow clone (no history, much faster)"
  puts
  exit
end

def which(*args)
  args.map { |arg| Dir.glob( "{#{ENV["PATH"].split(':').join(',')}}/#{arg}" ) }.flatten.compact.uniq
end

opts, args = ARGV.partition { |arg| arg[/^-\w/] }

cmd = [which("hub", "git"), "clone", "--recursive"]
cmd << "--depth=1" if opts.delete("-s")

cmd += args

reponame = nil

require 'pty'
PTY.spawn(*cmd) do |r, w, pid|
  begin
    loop do
      line = r.readpartial(4096)

      if line =~ /Cloning into '([^']+)'/
        reponame = $1
      end

      print line
    end
  rescue Errno::EIO
  end
end

if reponame
  # system("subl", reponame)
  if readme = Dir["#{reponame}/README*"].first
    system("c", readme)
  end
end
