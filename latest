#!/usr/bin/env ruby
require 'rubygems'
require 'epitools'
require 'date'

count = ARGV.first ? ARGV.first.to_i : nil

paths = Dir['**/*'].select{|fn| not File.directory?(fn)}

# Get modification times
paths = paths.map do |fn|
  mtime = File.mtime(fn) rescue nil
  next unless mtime
  [mtime, fn]
end.compact

paths = paths.sort[-count..-1] if count

grouped = paths.group_by{|t,f| t.strftime("%Y-%m-%d") }.sort

for group, paths in grouped
  
  puts group.light_blue
  
  splitpaths = paths.map { |time, path| [time] + File.split(path) }
  
  groupedpaths = splitpaths.group_by { |time, dir, file| dir }
  
  for dir, splitpaths in groupedpaths.sort
    p dir unless dir == '.'
    next
    splitpaths.sort!
      print "  "
      print "#{dir}/".light_white unless dir == "."
      puts file.white
    for time, dir, file in splitpaths
    end
  end
  
  puts
  
end
