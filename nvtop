#!/usr/bin/env ruby

require 'epitools'

fields = %w[
  name
  memory.used
  memory.total

  temperature.gpu
  fan.speed

  compute_mode
  pstate
  vbios_version
]

#   utilization.gpu
#   memory.free
#   power.draw
#   inforom.power
#   inforom.pwr
#   pcie.link.width.max
#   pcie.link.gen.max
#   pcie.link.width.current
#   driver_version

#   clocks.current.sm
#   clocks.current.graphics
#   clocks.current.memory

#   clocks.applications.graphics
#   clocks.applications.memory

#   clocks.default_applications.graphics
#   clocks.default_applications.memory

#   clocks.max.graphics
#   clocks.max.sm
#   clocks.max.memory

# ]


args = ["nvidia-smi", "--query-gpu=#{fields.join(",")}", "--format=csv,noheader,nounits", "-l", "1"]
# args = ["nvidia-smi", "--query-gpu=#{fields.join(",")}", "--format=csv", "-l", "1"]

# Note: Unsupported features return "[Not Supported]"
Stat = Struct.new(:name, :memused, :memtotal, :temp, :fan, :compute_mode, :pstate, :bios_version)

class Stat
  # def initialize(*args)
  #   super
  #   # self.memused = memused.split.first
  #   # self.memtotal = memused.split.first
  # end

  def to_color
    "<8>[ <7>#{name} v#{bios_version} <8>] [ <10>#{memused}<2>/<10>#{memtotal}<2>MB <8>| <12>#{temp}<4>Â°C <8>| <11>#{fan}<3>% <8>| <13>#{pstate} <8>| <9>#{compute_mode} <8>]".colorize
  end
end


begin
  run(*args) do |output|
    CSV.new(output).each do |row|
      s = Stat.new(*row.map(&:strip))
      puts s.to_color
    end
  end
rescue Interrupt
end