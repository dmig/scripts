#!/usr/bin/env ruby

require 'digest'

################################################################

HASHERS = {
  "--md5"    => Digest::MD5,
  "--sha1"   => Digest::SHA1,
  "--sha256" => Digest::SHA256,
  "--sha512" => Digest::SHA512,
}

################################################################

def usage
  puts "Usage:"
  puts "  pipesum [options...]"
  puts 
  puts "Purpose:"
  puts "  Insert this into a pipeline to hash data on the fly, and output"
  puts "  the computed hash(es) to STDERR."
  puts 
  puts "Options:"
  puts "  --all     => Compute all hash functions"
  HASHERS.each do |opt, klass|
    puts "  #{opt.ljust(9)} => #{klass}"
  end
  puts
  puts "(Note: Defaults to --sha1 if no options specified)"
  puts 
  puts "Example:"
  puts "  curl http://hostname.website/file.iso | pipesum --sha1 > file.iso"
  puts
end

################################################################

opts, args = ARGV.partition { |arg| arg[/^--?\w/] }

if opts.delete("--help") or opts.delete("-h")
  usage
  exit
end

opts << "--sha1" if opts.empty?

if opts.delete("--all")
  opts += HASHERS.keys
end

################################################################

digests = []

opts.uniq.each do |opt|
  if klass = HASHERS[opt]
    digests << klass.new
  else
    puts "Unrecognized option: #{opt}"
    exit 1
  end
end

################################################################

while data = $stdin.read(4096)
  digests.each {|digest| digest << data }
  $stdout.write(data)
end

digests.each do |digest|
  $stderr.puts "#{digest.class}: [#{digest}]"
end

