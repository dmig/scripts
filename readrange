#!/usr/bin/env ruby

unless (2..3).include? ARGV.size 
  puts "usage: readrange <filename> [<start>|<start..end>|<start> <end>]"
  exit 1
end

filename, range_string, finish = ARGV

fail "File does not exist: #{filename}" unless File.exists? filename

finish = finish.to_i if finish

case range_string
when /^(\d*)(\.\.\.?|-)(-?\d*)$/
  fail "Can't specify a range string AND a 3rd parameter!" if finish

  start  = $1.empty? ? 0 : $1.to_i
  finish = $3.empty? ? -1 : $3.to_i
when /^(\d+)$/
  start  = $1.to_i
else
  fail "Range string doesn't look right: #{range_string}"
end    

finish = -1 unless finish

open(filename, "rb") do |f|
  STDERR.print "* Copying from #{start} to #{finish}"
  finish = f.size + finish + 1 if finish < 0
  fail "Finish past end of file" if finish > f.size

  copy_length = finish - start

  STDERR.puts " (#{copy_length} bytes)"

  IO.copy_stream(f, STDOUT, copy_length, start)
end
