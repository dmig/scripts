#!/bin/bash
# DEPENDENCIES: tesseract-ocr imagemagick scrot yad

# - tesseract won't work if LC_ALL is unset so we set it here
# - you might want to delete or modify this line if you 
#   have a different locale:
export LC_ALL=en_US.UTF-8

# # language selection dialog
LANG="eng"
# TITLE=ScreenOCR # set yad variables
# LANG=$(yad \
#     --width 300 --entry --title "$TITLE" \
#     --image=gnome-screenshot \
#     --window-icon=gnome-screenshot \
#     --button="ok:0" --button="cancel:1" \
#     --text "Select language:" \
#     --entry-text \
#     "eng" "ita" "deu")

# - You can modify the list of available languages by editing the line above
# - Make sure to use the same ISO codes tesseract does (man tesseract for details)
# - Languages will of course only work if you have installed their respective
#   language packs (https://code.google.com/p/tesseract-ocr/downloads/list)

# RET=$? # check return status

# if [ "$RET" = 252 ] || [ "$RET" = 1 ]  # WM-Close or "cancel"
#   then
#       exit
# fi

# echo "Language set to $LANG"

SCR_IMG=`mktemp` # create tempfile
trap "rm $SCR_IMG*" EXIT # make sure tempfiles get deleted afterwards

notify-send "Select OCR region now."
scrot -s $SCR_IMG.png #take screenshot of area

mogrify -modulate 100,0 -resize 400% $SCR_IMG.png # postprocess to prepare for OCR
tesseract -l $LANG $SCR_IMG.png $SCR_IMG # OCR in given language

cat $SCR_IMG.txt | yad \
  --width 400 --height 400 \
  --button="Copy:1" --button="Close:0" \
  --text "Now in the clipboard:" \
  --text-info

RET=$?

if [ $RET = 1 ]; then
  echo clipboarding
  cat $SCR_IMG.txt | xsel -bi # pass to clipboard
fi

exit
