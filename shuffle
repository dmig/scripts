#!/usr/bin/ruby
#
# SHUFFLE! v15.01
# ----------------------------------------------------------------------
#
# Usage:
#   shuffle <mediatype (eg: images, videos, music, etc.)> <number of files, defaults to 100>
#

require 'rubygems'
require 'epitools'
require 'pp'

MEDIA_DEFS = [
  #  labels                            players                      exts
  [  [/^image/, /^pic/, /^photo/],     ["gthumb"],                  %w[jpg png gif],                        ],
  [  [/^mov/, /^vid/],                 ["totem", "mplayer"],        %w[avi mov mpg mpeg flv wmv asf m4v],   ],
  [  [/^mus/, /^aud/, /^song/],        ["audacious2", "amarok -e"], %w[mp3 flac mp4 aac ogg],               ],
]

opts = {
  :num => 69,
}

def find_in_path(*args)
  args.map { |arg| Dir.glob( "{#{ENV["PATH"].split(':').join(',')}}/#{arg}" ) }.squash
end

ARGV.each do |arg|
  
  case arg
  when /^(\d+)$/
    opts[:num] = $1.to_i
  when /^\w+$/
    for labels, players, exts, desc in MEDIA_DEFS
      if labels.any? { |pattern| pattern.match(arg) }
        opts[:player] = find_in_path(*players).first
        opts[:exts]   = exts  
        opts[:desc]   = arg
      end
    end
  end
  
end

####
puts "="*40
puts "Shuffle Options:"
puts "-"*40
pp opts.dup.delete_if{|k,v| k == :exts}
puts "="*40
####


####
glob_pattern = "**/*.{%s}" % opts[:exts].join(',')
puts
puts "+ Shuffling #{opts[:desc]}..."
puts "  |_ searching for: #{Dir.pwd}/#{glob_pattern}"

# GLOB IT
all_files = Dir.glob(glob_pattern, File::FNM_CASEFOLD)

# GROUP IT
grouped   = all_files.group_by { |filename| File.extname(filename)[1..-1].upcase }.sort_by{|k,v| -v.size}

puts "  |_ #{all_files.size} files found"

for group, files in grouped
  puts "     |_ #{files.size} #{group}s"
end
####

#randomfiles = []
#num.times do
#    break if files.empty?
#    randomfiles << files.delete_at(rand(files.size))
#end

random_files = all_files.shuffle[0...opts[:num]]

puts
puts "+ Sticking #{random_files.size} random #{opts[:desc]} into #{opts[:player]}..."
#fork { 
  exec opts[:player], *random_files 
#}


