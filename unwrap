#!/usr/bin/env ruby

########################################################
# Unwrap! v0.0002 Copyright (c) 2009 by Chris Gahan
########################################################
# Unwraps the lines in a text file.
#
# (In other words, it removes all the \n characters
# that were inserted to wrap the lines of text.)
#
require 'slop'

DEFAULT_WIDTH = 80

def parse_options
  Slop.parse(help: true, strict: true) do
    banner "Usage:\n    unwrap [options] [<input_file.txt>]"
    on :w=, :width,     "Width of the document (default: #{DEFAULT_WIDTH} characters)", as: Integer, default: DEFAULT_WIDTH
    on :s,  :stats,     "Statistics on line lengths"
    on :a,  :autowidth, "Guess the width of the document automatically."
  end
end


def unwrap(lines, width)
  # TODO: Unwrap lines which are close to line_width and don't end with ".", "!", "?"
  # TODO: Unwrap "conti- nuations"

  i     = 0
  last  = lines.size-1
  para  = []
  doc   = []
  
  loop do
    
    line = lines[i]
    para << line

    unless i == last
      next_words = lines[i+1].split(/\s+/)
      word_following_wrap = next_words[0]
      
      unless word_following_wrap and (line.size + word_following_wrap.size) >= width
        # new para!
        doc << para.join(' ')
        para = []
      end
    end
    
    i += 1
    break if i > last
    
  end  
  
  doc << para.join(' ')
  
  return doc
end


def display_statistics(lines)
  puts "Line length statistics:"
  puts "-----------------------------"

  lengths = lines.map(&:size)
  n       = lengths.size
  sum     = lengths.inject(0){|sum,len| sum + len}

  puts " lines: #{n}"
  puts "  mean: #{(sum.to_f / n).round(2)}"
  puts "median: #{lengths.sort[n / 2]}"
  puts "   min: #{lengths.reject{|l| l == 0}.min}"
  puts "   max: #{lengths.max}"
end


if $0 == __FILE__

  opts  = parse_options
  lines = ARGF.readlines.map(&:rstrip)

  if opts.stats?
    display_statistics(lines)
  else
    width = opts[:width]
    unwrap(lines, width).each { |para| STDOUT.write "#{para}\n\n" }
  end

end
